<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1-Minuten-Blog</title>
    <link>https://dastrasmue.github.io/minutenblog/index.xml</link>
    <description>Recent content on 1-Minuten-Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Thu, 15 Dec 2016 19:36:33 +0000</lastBuildDate>
    <atom:link href="https://dastrasmue.github.io/minutenblog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Impressum</title>
      <link>https://dastrasmue.github.io/minutenblog/impressum/</link>
      <pubDate>Thu, 15 Dec 2016 19:36:33 +0000</pubDate>
      
      <guid>https://dastrasmue.github.io/minutenblog/impressum/</guid>
      <description>

&lt;h2 id=&#34;angaben-gemäß-5-tmg&#34;&gt;Angaben gemäß § 5 TMG:&lt;/h2&gt;

&lt;p&gt;Daniel Straßner&lt;br /&gt;
Riedstr. 33a&lt;br /&gt;
86830 Schwabmünchen&lt;/p&gt;

&lt;h2 id=&#34;kontakt&#34;&gt;Kontakt:&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Telefon:&lt;/td&gt;
&lt;td&gt;+49 (0) 8232 75518&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;E-Mail&lt;/td&gt;
&lt;td&gt;daniel.strassner(at)makandra.de&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Quelle: &lt;em&gt;&lt;a href=&#34;https://www.e-recht24.de&#34;&gt;eRecht24&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;haftungsausschluss-disclaimer&#34;&gt;Haftungsausschluss (Disclaimer)&lt;/h1&gt;

&lt;h2 id=&#34;haftung-für-inhalte&#34;&gt;Haftung für Inhalte&lt;/h2&gt;

&lt;p&gt;Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach
den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter
jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen
oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen.&lt;/p&gt;

&lt;p&gt;Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den
allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch
erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei
Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend
entfernen.&lt;/p&gt;

&lt;h2 id=&#34;haftung-für-links&#34;&gt;Haftung für Links&lt;/h2&gt;

&lt;p&gt;Unser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen
Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen.
Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der
Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf
mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung
nicht erkennbar.&lt;/p&gt;

&lt;p&gt;Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete
Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen
werden wir derartige Links umgehend entfernen.&lt;/p&gt;

&lt;h2 id=&#34;urheberrecht&#34;&gt;Urheberrecht&lt;/h2&gt;

&lt;p&gt;Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem
deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der
Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung
des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den
privaten, nicht kommerziellen Gebrauch gestattet.&lt;/p&gt;

&lt;p&gt;Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die
Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet.
Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen
entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte
umgehend entfernen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>1-Minuten-Blog mit Hugo</title>
      <link>https://dastrasmue.github.io/minutenblog/2016/12/1-minuten-blog-mit-hugo/</link>
      <pubDate>Tue, 13 Dec 2016 13:12:15 +0100</pubDate>
      
      <guid>https://dastrasmue.github.io/minutenblog/2016/12/1-minuten-blog-mit-hugo/</guid>
      <description>&lt;h2 id=&#34;herzlich-willkommen-zum-1-minuten-blog-mit-hugo&#34;&gt;Herzlich Willkommen zum 1-Minuten-Blog mit Hugo!&lt;/h2&gt;

&lt;p&gt;Ich werde im Rahmen des &lt;a href=&#34;https://www.meetup.com/de-DE/web-and-wine/events/235929431/&#34;&gt;Web&amp;amp;Wine&lt;/a&gt;-Lightning-Talks
vorstellen, wie man mit dem &lt;em&gt;statischen Seitengenerator&lt;/em&gt; &lt;a href=&#34;https://gohugo.io/&#34;&gt;HUGO&lt;/a&gt;
einen eigenen Blog erstellen kann. Die ersten Schritte können in einer Minute
bewältigt werden.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;was-werden-wir-betrachten&#34;&gt;Was werden wir betrachten?&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Erstellen einer Seite&lt;/li&gt;
&lt;li&gt;Erstellen von Posts&lt;/li&gt;
&lt;li&gt;Verwendung von Themen&lt;/li&gt;
&lt;li&gt;Hosting des Blogs auf GitHub Pages&lt;/li&gt;
&lt;li&gt;Einbettung von Kommentaren&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;erstellen-einer-seite&#34;&gt;Erstellen einer Seite&lt;/h3&gt;

&lt;p&gt;Hugo kann über die &lt;a href=&#34;https://github.com/spf13/hugo/releases/&#34;&gt;offizielle GitHub-Seite&lt;/a&gt;
bezogen werden und wiegt nur etwa 5MB. Nach der Installation kann eine neue Seite
über folgenden Befehl erzeugt werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new minuteblog
...
$ tree minuteblog
+--- minuteblog
|   +--- archetypes
|   +--- config.toml
|   +--- content
|   +--- data
|   +--- layouts
|   +--- static
|   +--- themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;erstellen-von-posts&#34;&gt;Erstellen von Posts&lt;/h3&gt;

&lt;p&gt;Posts werden zuerst mit Hugo generiert und können dann editiert werden. Posts
enthalten bereits Meta-Informationen.
Für die Strukturierung des Textes wird &lt;em&gt;Markdown&lt;/em&gt; verwendet. Gute Ressourcen, um die Markdown-Syntax nachzuschlagen sind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;John Grubers urprüngliche Spezifikation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;Markdown Cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ein Post wird über folgenden Befehl generiert:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/first.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nach dem erstellen von Posts möchte man in der Regel eine Vorschau der Seite
anschauen. Dazu kann Hugos eingebauter Webserver verwendet werden. Dieser wird
gestartet über &lt;code&gt;hugo server -D&lt;/code&gt;. Der Parameter &lt;code&gt;-D&lt;/code&gt; bewirkt dabei, dass auch
Posts gerendert werden, die noch als &lt;code&gt;draft&lt;/code&gt; markiert sind.&lt;/p&gt;

&lt;p&gt;Allerdings bemerkt man, dass der Seite noch ein Thema fehlt.&lt;/p&gt;

&lt;h3 id=&#34;verwendung-von-themen&#34;&gt;Verwendung von Themen&lt;/h3&gt;

&lt;p&gt;Es kann zwischen einer großen Anzahl von Themen für Hugo gewählt werden. Diese
werden auf der &lt;a href=&#34;https://themes.gohugo.io&#34;&gt;offiziellen Seite&lt;/a&gt; präsentiert. Für
diesen Blog verwenden wir &lt;a href=&#34;https://themes.gohugo.io/hugo-tranquilpeak-theme/&#34;&gt;hugo-tranquilpeak-theme&lt;/a&gt;. Eine Demo des Themas kann
hier betrachtet werden: &lt;a href=&#34;https://tranquilpeak.kakawait.com/&#34;&gt;https://tranquilpeak.kakawait.com/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes
$ git submodule add https://github.com/kakawait/hugo-tranquilpeak-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Anschließend sollte die Konfigurationsdatei des Themas in das
Projekt-Root-Verzeichnis kopiert und angepasst werden.&lt;/p&gt;

&lt;h3 id=&#34;hosting-des-blogs-auf-github-pages&#34;&gt;Hosting des Blogs auf GitHub Pages&lt;/h3&gt;

&lt;p&gt;Mit Hugo muss vor dem Hosting die HTML-Version der Seite erzeugt werden. Dies
geschieht über den Befehl &lt;code&gt;hugo&lt;/code&gt;. Dabei werden aus dem Thema und den Markdown-
Dateien eine gültige Seitenstruktur erzeugt und unter &lt;code&gt;public&lt;/code&gt; abgelegt.&lt;/p&gt;

&lt;p&gt;Mit dem Dienst &lt;a href=&#34;https://pages.github.com/&#34;&gt;Pages&lt;/a&gt; bietet GitHub die Möglichkeit,
statische Seiten direkt zu hosten. In der Regel wird ein ganzes Repository als
Internetseite verstanden und kann über die URL &lt;code&gt;https://username.github.io/repo&lt;/code&gt;
erreicht werden.&lt;/p&gt;

&lt;p&gt;Gibt es in dem Repository jedoch einen Unterordner &lt;code&gt;docs&lt;/code&gt;, so kann dieser als
Quellverzeichnis gewählt werden. Damit Hugo die Seite in &lt;code&gt;docs&lt;/code&gt; ablegt,
bedarf es eines kleinen Tricks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir docs
$ ln -s docs public
$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Danach geht man in dem GitHub-Repository auf &lt;em&gt;Settings &amp;gt; GitHub Pages&lt;/em&gt; und wählt
&lt;em&gt;master branch /docs folder&lt;/em&gt; als Quelle aus. Nach dem nächsten Push des Codes ist
die Seite über &lt;a href=&#34;https://username.github.io/repo&#34;&gt;https://username.github.io/repo&lt;/a&gt; erreichbar.&lt;/p&gt;

&lt;h3 id=&#34;einbettung-von-kommentaren&#34;&gt;Einbettung von Kommentaren&lt;/h3&gt;

&lt;p&gt;Viele Themen erlauben es, &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt; zur Einbettung von
Kommentaren einzubinden. Auch mit dem verwendeten Thema ist dies möglich. Nach
der Registrierung bei Disqus, kann eine neue Seite angelegt werden. Diese wird
eindeutig über den sog. &lt;em&gt;shortname&lt;/em&gt; identifiziert. Die ganze URL für diesen Blog
lautet &lt;em&gt;minutenblog&lt;/em&gt;.disqus.com.&lt;/p&gt;

&lt;p&gt;Damit Kommentare eingebettet werden können, muss nur folgender Eintrag in
&lt;code&gt;config.toml&lt;/code&gt; gesetzt werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqusShortname = &amp;quot;minutenblog&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Herzlichen Dank für die Aufmerksamkeit!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>makandra Gem-Session: Tag 2</title>
      <link>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-tag-2/</link>
      <pubDate>Fri, 18 Nov 2016 07:24:33 +0000</pubDate>
      
      <guid>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-tag-2/</guid>
      <description>&lt;p&gt;Heute geht es darum, die Suche in der Rails-Anwendung fertig zu machen. Dazu muss ich mich kurz noch in HAML einarbeiten.
 Der Großteil der Suchlogik sollte passen, nachdem Henning das gestern zusammengeschrieben hat.&lt;/p&gt;

&lt;p&gt;EDIT: Ok, es gab ein paar Tücken mit dem Routing von makandra cards. Da sich Aktionen in der Regel auf Decks beziehen,
 wurde in die Route automatisch das aktuelle Deck eingefügt. Die Chrome Extension soll jedoch alle Decks, auf die der
 Benutzer Zugriff hat, durchsuchen nach passenden Cards. Dies konnte aber durch Reservierung des &lt;code&gt;api&lt;/code&gt;-Pfades behoben
 werden.&lt;/p&gt;

&lt;p&gt;Nun steht das Styling der Suchergebnisse an. Da sich die Ergebnisse in die normale Google-Suche visuell gut eingliedern
 sollen, habe ich die selben CSS-Werte gesetzt.&lt;/p&gt;

&lt;p&gt;Der letzte Schritt ist, die Logik der Chrome-Extension so anzupassen, dass Ergebnisse automatisch nachgeladen werden,
 sobald bei Google etwas anderes eingetippt wird. Dabei kann wohl ausgenutzt werden, dass sich die URL bei jeder Suche
 anpasst. Man muss also das Event, dass sich die URL ändert, abfangen. Ich habe mich dabei an einem Beispiel auf
 Stackoverflow gehalten, leider hat das nicht auf Anhieb so funktioniert, so dass ich bis zu unserer Deadline um 15:30
 das letzte Feature nicht umsetzen konnte.&lt;/p&gt;

&lt;p&gt;Trotzdem halte ich die Chrome Extension für ganz nützlich und möchte das Projekt noch in meiner Freizeit abschließen.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>makandra Gem-Session: Tag 1</title>
      <link>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-tag-1/</link>
      <pubDate>Thu, 17 Nov 2016 10:45:23 +0000</pubDate>
      
      <guid>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-tag-1/</guid>
      <description>&lt;h2 id=&#34;aufgaben&#34;&gt;Aufgaben&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Erstellen der Projekt-Seite mit Hugo

&lt;ul&gt;
&lt;li&gt;Hosting auf Raspberry Pi per Docker&lt;/li&gt;
&lt;li&gt;Domain-Weiterleitung einrichten&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Einarbeitung Chrome Extensions&lt;/li&gt;
&lt;li&gt;Einarbeitung Webapp-Suche anzapfen&lt;/li&gt;
&lt;li&gt;Auswahl eines passenden Namens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;einarbeitung-chrome-extensions&#34;&gt;Einarbeitung Chrome Extensions:&lt;/h2&gt;

&lt;p&gt;Eine Chrome Extension ist ein gepackter Ordner, der ein Manifest, HTML- und JavaScript-Dateien enthält. Für die Entwicklung kann ein lokales Verzeichnis verwendet werden. Dieses wird in Chrome eingebunden, indem chrome://extensions aufgerufen wird. Einfach den Ordner per Drag-and-Drop reinziehen. Done.&lt;/p&gt;

&lt;p&gt;-&amp;gt; Ich muss eine &lt;em&gt;page action&lt;/em&gt; erstellen, da sich die Extension nur auf eine Seite bezieht (in diesem Fall google.de).&lt;/p&gt;

&lt;h3 id=&#34;architektur&#34;&gt;Architektur&lt;/h3&gt;

&lt;p&gt;Chrome Extensions bestehen aus mehreren Teilen. Dabei gibt es verschiedene Arten von HTML-Seiten. Die &lt;em&gt;background page&lt;/em&gt; &lt;code&gt;background.html&lt;/code&gt; kontrolliert das Verhalten der Extension im Hintergrund. Wenn die Hintergrundseite ständig geöffnet sein soll, so muss sie eine &lt;em&gt;persistent background page&lt;/em&gt; sein. Andernfalls recht eine &lt;em&gt;event page&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;-&amp;gt; Ich benötige wahrscheinlich eine &lt;em&gt;event page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UI Pages&lt;/em&gt; sind HTML-Seiten, die z.B. in einem Popup angezeigt werden. Typisch sind beispielweise Einstellungsseiten. HTML-Seiten innerhalb einer Extension können uneingeschränkt aufeinander zugreifen.&lt;/p&gt;

&lt;p&gt;Für die Interaktion mit einer Webseite muss ein &lt;em&gt;content script&lt;/em&gt; erzeugt werden. Dies ist eine JavaScript-Datei, die Details der besuchten Seiten auslesen und ändern kann. Content scripts können allerdings nicht das DOM der background page ändern.&lt;/p&gt;

&lt;p&gt;-&amp;gt; Ich brauch auf jeden Fall ein &lt;em&gt;content script&lt;/em&gt; zum Einbetten der Ergebnisse in die Goolge-Suchergebnisse.&lt;/p&gt;

&lt;h3 id=&#34;status-20-30&#34;&gt;Status 20:30&lt;/h3&gt;

&lt;p&gt;Die Browser Extension ist angelegt und ich hab inzwischen die Funktionsweise verstanden, so dass ich eine &lt;em&gt;page action&lt;/em&gt;
 erstellen konnte, damit die Extension nur auf Google ausgeführt werden kann. Auf anderen Seiten ist die Schaltfläche ausgegraut.
 Das &lt;em&gt;content script&lt;/em&gt; kann nach Klick auf das Extension-Logo per JavaScript die Google-Suchanfrage ganz einfach auslesen. Weiter
 wird per JavaScript ein &lt;code&gt;div&lt;/code&gt; konstruiert, welches in der rechten Seitenleiste eingebettet wird.&lt;/p&gt;

&lt;p&gt;Jetzt muss ich schauen, wie ich eine Suchanfrage an makandra cards schicken kann, so dass ich eine JSON mit Suchergebnissen zurückgeliefert bekomme.
Ach ja, Abendessen gab&amp;rsquo;s auch schon und war sehr lecker&amp;hellip; ;-)&lt;/p&gt;

&lt;h3 id=&#34;status-22-00&#34;&gt;Status 22:00&lt;/h3&gt;

&lt;p&gt;Henning hat sich mit mir zusammengesetzt, um den Endpoint zu besprechen, der von der Rails-Anwendung angeboten werden soll. Wir haben uns dafür entschieden, einen neuen Controller zu schreiben, der eine minimale HTML-Seite zurückliefert, die die Suchergebnisse enthält. Diese Seite kann von der Chrome Extension in einem iframe eingebettet werden.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>makandra Gem-Session 2016</title>
      <link>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-2016/</link>
      <pubDate>Thu, 17 Nov 2016 10:12:47 +0000</pubDate>
      
      <guid>https://dastrasmue.github.io/minutenblog/2016/11/makandra-gem-session-2016/</guid>
      <description>&lt;h2 id=&#34;ziel&#34;&gt;Ziel&lt;/h2&gt;

&lt;p&gt;Entwicklung eines Browser-Plugins, das bei einer Google-Suche gleichzeitig passende Ergebnisse aus der makandra Wissensdatenbank anzeigt.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;anforderungen&#34;&gt;Anforderungen&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Extension für Chrome&lt;/li&gt;
&lt;li&gt;Einbettung in Google-Suchergebnisse&lt;/li&gt;
&lt;li&gt;Durchsuchen privater Cards&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;nice-to-haves&#34;&gt;&amp;ldquo;Nice-to-haves&amp;rdquo;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Firefox-Addon&lt;/li&gt;
&lt;li&gt;Web-Clipper-Funktion&lt;/li&gt;
&lt;li&gt;Context-Menu-Eintrag für Suche nach markiertem Ausdruck (siehe Beispiel &amp;ldquo;Download and Open Button&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>